<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd   
   http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd   
   http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd   
   http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">
	
	<context:component-scan base-package="com.jll" >
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
    
    <bean id="sysInitLoader" class="com.jll.sys.init.SysInitLoader" init-method="init"/>
    
    <bean id="SpringContextUtil" class="com.jll.spring.extend.SpringContextUtil" scope="singleton"/>
    
	<bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor"/>

	<bean id="propertyConfigurer"
		class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:redis.properties</value>
				<value>classpath:datasource.properties</value>
				<value>classpath:sys-setting.properties</value>
				<value>classpath:sms-ucpaas.properties</value>
			</list>
		</property>
	</bean>

	<bean id="dataSource"
		class="com.alibaba.druid.pool.DruidDataSource" init-method="init"
		destroy-method="close">
		<!-- 基本属性 url、user、password -->
		<property name="url" value="${datasource.url}" />
		<property name="username" value="${datasource.username}" />
		<property name="password" value="${datasource.password}" />

		<!-- 配置初始化大小、最小、最大 -->
		<property name="initialSize" value="1" />
		<property name="minIdle" value="1" />
		<property name="maxActive" value="20" />

		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="60000" />

		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />

		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="300000" />

		<property name="validationQuery" value="SELECT 'x'" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />

		<!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
		<property name="poolPreparedStatements" value="true" />
		<property name="maxPoolPreparedStatementPerConnectionSize"
			value="20" />

		<!-- 配置监控统计拦截的filters -->
		<!-- <property name="filters" value="stat" /> -->
		<property name="filters" value="mergeStat" />
		<!-- <property name="connectionProperties"
			value="config.decrypt=true;config.decrypt.key=${datasource.publickey}" /> -->
	</bean>

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mappingLocations">
			<list>
				<value>classpath:/com/jll/entity/*.hbm.xml</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${datasouce.dialect}</prop>
				<prop key="hibernate.show_sql">true</prop>
			</props>
		</property>
	</bean>

	<bean id="hibernateTemplate" class="org.springframework.orm.hibernate5.HibernateTemplate">
        <property name="sessionFactory"  ref="sessionFactory"/>
    </bean> 
    
	<bean id="txManager"
		class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<!-- <tx:annotation-driven transaction-manager="txManager" /> -->
	
    
	<tx:advice id="txAdvice" transaction-manager="txManager">
        <!-- the transactional semantics... -->
        <tx:attributes>
            <!-- all methods starting with 'get' are read-only -->
            <!-- <tx:method name="get*" propagation="REQUIRED" read-only="true"/>
            
            <tx:method name="query*" propagation="REQUIRED" read-only="true"/>
            
            <tx:method name="find*" propagation="REQUIRED" read-only="true"/> -->
            
            <tx:method name="get*" read-only="true"/>
            
            <tx:method name="query*" read-only="true"/>
            
            <tx:method name="find*" read-only="true"/>
            
            <tx:method name="save*" propagation="REQUIRED"/>
            
            <tx:method name="update*" propagation="REQUIRED"/>
            
            <tx:method name="process*" propagation="REQUIRED"/>
            
            <!-- <tx:method name="make*" propagation="REQUIRED"/>
                        
            <tx:method name="change*" propagation="REQUIRED"/>
            
            <tx:method name="move*" propagation="REQUIRED"/> -->
            
            <!-- other methods use the default transaction settings (see below) -->
            <!-- <tx:method name="*"/> -->
        </tx:attributes>
    </tx:advice>

    <!-- ensure that the above transactional advice runs for any execution
        of an operation defined by the FooService interface -->
    <aop:config>
        <aop:advisor advice-ref="txAdvice" pointcut="execution(* com.jll..*Service.*(..))"/>
    </aop:config>
    
    
    
	<import resource="spring-redis.xml" />
	<import resource="spring-security.xml" />
	<import resource="spring-job.xml" />
</beans>